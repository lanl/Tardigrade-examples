import sys
import pathlib
import datetime
import unittest.mock

# -- Project information -----------------------------------------------------
project = "@project_name@"
VERSION = "@version@"
author_latex = r"@author_latex@"

# Mock modules unavailable in the Conda environment, e.g. Abaqus Python modules, and large imports not required by
# the documentation build, e.g. cubit.
mock_modules = ["abaqus", "abaqusConstants", "mesh", "cubit", "scipy", "scipy.stats",
                "scipy.optimize", "xarray", "pyyaml", "h5py", "numpy", "matplotlib",
                "matplotlib.pyplot", "scienceplots", "waves", "pandas", "scipy.linalg",
                "part", "material", "section", "assembly", "step", "interaction",
                "load", "mesh", "optimization", "job", "sketch", "visualization",
                "odbAccess", "seaborn",
                "file_io", "file_io.xdmf", "meshio", "micromorphic_filter",
                "micromorphic_filter.filter_dns", "linear_elastic_parameter_constraint_equations",
                "micromorphic", "summarize_calibration_results"]
for mod_name in mock_modules:
    sys.modules[mod_name] = unittest.mock.Mock()

# The full version, including alpha/beta/rc tags
release = VERSION
version = release
copyright = f"{datetime.date.today().year} Triad National Security, LLC. All Rights Reserved."

# -- Project Variables -------------------------------------------------------
rst_prolog = f".. |PROJECT| replace:: {project.upper()}\n.. |project| replace:: {project}\n.. include:: targets.txt"

# -- General configuration ---------------------------------------------------
# Add any Sphinx extension module names here, as strings.
extensions = ["sphinx.ext.autodoc",
              "sphinx.ext.viewcode",
              "sphinx.ext.extlinks",
              "sphinxcontrib.bibtex",
              "sphinx_subfigure",
              "sphinxarg.ext",
              #"sphinx_toolbox.source",
              ]
bibtex_bibfiles = [
    'references.bib'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
source_suffix = [".rst"]

# Set the toctree document(s) variable(s)
master_doc = "index"

# Use figure numbers in references
# Reference: https://stackoverflow.com/a/44392240
numfig = True

# Default exclude patterns from sphinx-quickstart
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# Links to PRs, Jira issues.
extlinks = {
     "merge": ("https://re-git.lanl.gov/aea/models-and-simulations/9501-model-studies/-/merge_requests/%s", "MERGE-%s"),
     "issue": ("https://re-git.lanl.gov/aea/models-and-simulations/9501-model-studies/-/issues/%s", "ISSUE-%s"),
     "repo": ("https://re-git.lanl.gov/aea/models-and-simulations/tardigrade-examples/-/blob/dev/%s", "%s"),
}

# -- Options for LaTeX output ---------------------------------------------
latex_elements = {
    # Force all figures to respect source file location
    "figure_align": "H",
    # Override geometry package statement to add space for two line header/footer
    "geometry": "\\usepackage[headheight=28pt,footskip=28pt]{geometry}",
    # Override title page style starting from sphinxmanual.cls
    # Override internal page header/footer starting from sphinx.sty
    "preamble": r"""
\usepackage{lscape}
\makeatletter
  \fancypagestyle{firstpage}{
    \fancyhf{}
    \renewcommand{\headrulewidth}{0pt}
    \chead{\bf{UNCLASSIFIED}}
    \cfoot{\bf{UNCLASSIFIED}}
  }
\makeatother
\usepackage{xpatch}
\xapptocmd{\titlepage}{\thispagestyle{firstpage}}{}{}
\makeatletter
  \fancypagestyle{normal}{
    \fancyhf{}
    \fancyhead[E]{{\begin{minipage}[b]{\textwidth}\begin{center}\bf{UNCLASSIFIED}\end{center}\py@HeaderFamily \@title, \py@release\end{minipage}}}
    \fancyfoot[E]{{\begin{minipage}[b]{\textwidth}\raggedleft\py@HeaderFamily\thepage\hfill\py@HeaderFamily\nouppercase{\leftmark}\begin{center}\bf{UNCLASSIFIED}\end{center}\end{minipage}}}
    \fancyhead[O]{{\begin{minipage}[b]{\textwidth}\begin{center}\bf{UNCLASSIFIED}\end{center}\hfill\py@HeaderFamily \@title, \py@release\end{minipage}}}
    \fancyfoot[O]{{\begin{minipage}[b]{\textwidth}\raggedleft\py@HeaderFamily\nouppercase{\rightmark}\hfill\thepage\py@HeaderFamily\begin{center}\bf{UNCLASSIFIED}\end{center}\end{minipage}}}
    \renewcommand{\headrulewidth}{0.4pt}
    \renewcommand{\footrulewidth}{0.4pt}
    }
  \fancypagestyle{plain}{
    \fancyhf{}
    \fancyhead[C]{{\begin{minipage}[b]{\textwidth}\begin{center}\bf{UNCLASSIFIED}\end{center}\end{minipage}}}
    \fancyfoot[E]{{\begin{minipage}[b]{\textwidth}\raggedleft\py@HeaderFamily\thepage\begin{center}\bf{UNCLASSIFIED}\end{center}\end{minipage}}}
    \fancyfoot[O]{{\begin{minipage}[b]{\textwidth}\raggedleft\hfill\py@HeaderFamily\thepage\begin{center}\bf{UNCLASSIFIED}\end{center}\end{minipage}}}
    \renewcommand{\headrulewidth}{0pt}
    \renewcommand{\footrulewidth}{0.4pt}
    }
\makeatother
""",
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto, manual, or own class]).
output_file = f"{project.lower()}.tex"
title = "Tardigrade-examples Report"
latex_documents = [
    (master_doc, output_file, title, author_latex, "manual"),
]
